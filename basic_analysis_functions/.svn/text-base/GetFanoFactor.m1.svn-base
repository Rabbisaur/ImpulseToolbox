function FanoFactor = GetFanoFactor(path,EID,Edge,args,WindowSize,StepSize,mergematrix)
% args(1) -- ValidOnly
% args(2) -- merge conditions
% args(3) -- 0 = Not On rf, 1 = On rf, 2 = both 
% args(4) --  0 = Load Spike, 1 = Load Spike5
switch nargin
    case 3
        args = [1,0,0,0];
        mergematrix = [];
        WindowSize = 50;
        StepSize = 1;
    case 4
        if args(2)
            error('You must specify mergematrix when args(3) = 1')
        end
        WindowSize = 50;
        StepSize = 1;
    case 6
        if args(2)
            error('You must specify mergematrix when args(3) = 1')
        end
    case 7
        % do nothing
    otherwise
        error('Use: FanoFactor = GetFanoFactor(path,args,EID,Edge,WindowSize,StepSize,mergematrix)')
end
% path = '/home/wang/testground/CDcueing/G121130_e12_60soa_009';
% args = [1,1,1,0];
% % EID = [6,9,17,15,50,46,56,55,89,90,8,11,13,19,54,52,58,57,91,92,10,12,23,25,21,62,60,59,94,93,14,16,20,27,29,31,64,61,63,96,18,22,24,26,28,30,95];
% EID = [54 52 58 10 12 23 60 59 94];
% mergematrix = [{1:5},{6:10},{11:15}];
% Edge = 0:1:700;
% WindowSize = 50; % ms
% StepSize = 1; % ms
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[CondSpikeTrain] = BinSpike(path,Edge,EID,args,mergematrix); % get spike train
NumSplits = numel(CondSpikeTrain); % get number of splits
NumElectrode = numel(EID);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Compute fano factor for each individual electrode with the spike train in
% each conditions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
SpikeTrainLength = length(Edge);
NumPoints = floor((SpikeTrainLength - WindowSize)/StepSize); % calculate number of times we should compute the fano factor
FanoFactor = zeros(NumElectrode,NumSplits,NumPoints); % allocate memory for the result
% compute fano factor for one electrode in one condition
for SplitIdx = 1:NumSplits
    for ElectrodeIdx = 1: NumElectrode
        for WindowIdx = 1:NumPoints
            TimeBinIndex = [(WindowIdx-1)*StepSize+1,(WindowIdx-1)*StepSize+WindowSize];
            iData = squeeze(CondSpikeTrain{SplitIdx}(ElectrodeIdx,:,TimeBinIndex(1):TimeBinIndex(2)));
            iSC = sum(iData,2);
            iVariance = var(iSC);
            iMean = mean(iSC);
            iFanoFactor = iVariance/iMean;
            FanoFactor(ElectrodeIdx,SplitIdx,WindowIdx) = iFanoFactor;
        end
    end
end