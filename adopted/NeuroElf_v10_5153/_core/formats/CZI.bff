# BinaryFileFormat (leave this tag as magic token!)

# Carl Zeiss file format for *.CZI files (Carl Zeiss Images)
# CZI FileVersions supported: (no versioning information)
#
# CZI files contain confocal, multichannel images.
#
# Version:  v1.0
# Build:    14121416
# Date:     Dec-14 2014, 4:43 PM EST
# Author:   Jochen Weber, SCAN Unit, Columbia University, NYC, NY, USA
# URL/Info: http://neuroelf.net/

# FILE FORMAT
DefaultProperty:Data
Description:Carl Zeiss Images
EncodingSyntax:ieee-le
Extensions:czi
Magic:|
name             |range       |type    |magic
CZI_ImageHeader  |1, 10       |hex     |5a,49,53,52,41,57,46,49,4c,45
EndMagic

# FIELDS
ListOfFields:!
type  !cond                   !disktype!datatype!dim                      !default !varname

# no write support
EXPRE !$BFFWRITE          !!!!!error('No write support yet.');

# looping until all the file is read
EXPRE !$BFFREAD           !!!!!...
@RawContent = emptystruct({ ...
    'ShortName', 'BytesAllocated', 'BytesUsed', 'FileRawContent', 'FileType', 'FileCooked'});
BLOOP !$BFFREAD               ! ! !999 ! !FileNo
FIELD !                       !char    !char    !1, 16                    !        !RawContent($FileNo).ShortName
FIELD !                       !uint64  !double  !1, 1                     !        !RawContent($FileNo).BytesAllocated
FIELD !                       !uint64  !double  !1, 1                     !        !RawContent($FileNo).BytesUsed
EXPRE !                   !!!!!$czireadbytes = @RawContent($FileNo).BytesAllocated;
FIELD !                       !uint8   !uint8   !1, $czireadbytes         !        !RawContent($FileNo).FileRawContent
EXPRE !!!!!!...
@RawContent($FileNo).ShortName = unzerostring(@RawContent($FileNo).ShortName); ...
if strcmpi(@RawContent($FileNo).ShortName, 'ZISRAWSUBBLOCK') && ...
    @RawContent($FileNo).BytesAllocated > 256 && ...
    @RawContent($FileNo).FileRawContent(1) == 12 && ...
    @RawContent($FileNo).FileRawContent(17) == 68 && ...
    @RawContent($FileNo).FileRawContent(18) == 86, ...
    @RawContent($FileNo).FileType = 'DVImage'; ...
    $czinumdims = double(@RawContent($FileNo).FileRawContent(45)); ...
    $czidnames = cell(1, $czinumdims); ...
    $czidsize = ones(1, $czinumdims); ...
    for czicc = 1:$czinumdims, ...
        $czidnames{czicc} = unzerostring(char(@RawContent($FileNo).FileRawContent(28+(czicc*20)+(1:8)))); ...
        $czidsize(czicc) = sum((2 .^ (0:8:40)) .* double(@RawContent($FileNo).FileRawContent(36+(czicc*20)+(1:6)))); ...
    end, ...
    if @RawContent($FileNo).BytesAllocated >= (256 + prod($czidsize)), ...
        @RawContent($FileNo).FileCooked = struct( ...
            'DimNames', {$czidnames}, ...
            'DimSizes', $czidsize, ...
            'Image', permute(reshape(@RawContent($FileNo).FileRawContent(269:268+prod($czidsize)), [$czidsize, 1]), [2, 1, 3:numel($czidsize)])); ...
    end, ...
end
EXPRE !                   !!!!!if ftell(fid) > ($FILESIZE - 48), $FileNo = 1000; end
ELOOP !                       ! ! !    ! !FileNo

# Read rest of File into REMAININGCONTENT
EXPRE !$HEADERONLY        !!!!!fseek(fid, 0, 1);
EXPRE !$BFFREAD           !!!!!$RemSize = $FILESIZE - ftell(fid);
FIELD !$RemSize > 0           !uint8   !uint8   !1, $RemSize              !        !REMAININGCONTENT

EndListOfFields

# new file code snippet
NewFileCode:!
@RawContent = struct( ...
    'ShortName', 'ZISRAWFILE', ...
    'BytesAllocated', 16, ...
    'BytesUsed', 0, ...
    'FileRawContent', char(zeros(1, 16)), ...
    'FileType', 0, ...
    'FileCooked', struct); ...
EndNewFileCode
